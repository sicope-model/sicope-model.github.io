(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{102:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),o=(n(0),n(111)),i={id:"model",title:"Model",sidebar_label:"Model",slug:"/model"},c={unversionedId:"model",id:"model",isDocsHomePage:!1,title:"Model",description:"Model",source:"@site/docs/model.md",slug:"/model",permalink:"/docs/model",editUrl:"https://github.com/sicope-model/sicope-model-website/edit/master/docs/model.md",version:"current",sidebar_label:"Model",sidebar:"docs",previous:{title:"Requirements & Installation",permalink:"/docs/install"},next:{title:"Task",permalink:"/docs/task"}},l=[{value:"Model",id:"model",children:[]},{value:"Place",id:"place",children:[]},{value:"Transition",id:"transition",children:[]},{value:"Command",id:"command",children:[]},{value:"Guard",id:"guard",children:[]},{value:"Revision",id:"revision",children:[]}],d={toc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"model"},"Model"),Object(o.b)("p",null,"In Model-Based Testing, model is used to describe how a part of system under test works. Each tool can use different\nmodel type. In SICOPE Model, model is single-color petrinet. Each model is consisting of places and transitions.\nEach place and transition contains Selenium commands to interact with system under test."),Object(o.b)("h2",{id:"place"},"Place"),Object(o.b)("p",null,"Each page in web application can be considered as a place, but not always. Some places can be combined to describe a\nstate of a model at a time. A model can be in different places at the same time."),Object(o.b)("h2",{id:"transition"},"Transition"),Object(o.b)("p",null,"Each action in web application (click a button, click a link) can be considered as a transition. A transition change\nstate of a model from some places to others. Each transition has a condition called guard."),Object(o.b)("hr",null),Object(o.b)("h2",{id:"command"},"Command"),Object(o.b)("p",null,"Each place and transition can contain some commands. They are just Selenium commands. They are used to interact with\nsystem under test. Each command is consisting with:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Command"),Object(o.b)("li",{parentName:"ol"},"Target"),Object(o.b)("li",{parentName:"ol"},"Value")),Object(o.b)("p",null,"Depend on the command, target can be element selector or window handler, and value can be text, or variable name."),Object(o.b)("hr",null),Object(o.b)("h2",{id:"guard"},"Guard"),Object(o.b)("p",null,"Guard is condition of a transition. A transition can only be applied if guard is evaluated to true. Each guard is a\nSymfony's expression language."),Object(o.b)("h2",{id:"revision"},"Revision"),Object(o.b)("p",null,"Each time a model is updated, new revision is created. That's why old tasks and bugs are not affected."))}s.isMDXComponent=!0},111:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),s=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),p=a,b=u["".concat(i,".").concat(p)]||u[p]||m[p]||o;return n?r.a.createElement(b,c(c({ref:t},d),{},{components:n})):r.a.createElement(b,c({ref:t},d))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var d=2;d<o;d++)i[d]=n[d];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);